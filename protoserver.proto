syntax = "proto3";
package juno.protoserver.v1;

option go_package = "github.com/CosmosContracts/juno/x/protoserver/types";

import "google/api/annotations.proto";
import "cosmos/query/v1/query.proto";

// ProtoServer provides access to complete protobuf definitions
service ProtoServer {
  option (cosmos.query.v1.module_query_safe) = true;

  // ListProtoFiles returns all available proto files
  rpc ListProtoFiles(ListProtoFilesRequest) returns (ListProtoFilesResponse) {
    option (google.api.http).get = "/juno/protoserver/v1/files";
  }
  
  // GetProtoFile returns the content of a specific proto file
  rpc GetProtoFile(GetProtoFileRequest) returns (GetProtoFileResponse) {
    option (google.api.http).get = "/juno/protoserver/v1/file/{path}";
  }
  
  // GetDescriptorSet returns the compiled descriptor set with all metadata
  rpc GetDescriptorSet(GetDescriptorSetRequest) returns (GetDescriptorSetResponse) {
    option (google.api.http).get = "/juno/protoserver/v1/descriptor_set";
  }
  
  // GetServiceDescriptors returns descriptors for all services including Msg services
  rpc GetServiceDescriptors(GetServiceDescriptorsRequest) returns (GetServiceDescriptorsResponse) {
    option (google.api.http).get = "/juno/protoserver/v1/services";
  }
}

message ListProtoFilesRequest {
  // Optional filter by package prefix
  string package_filter = 1;
}

message ListProtoFilesResponse {
  // List of proto file paths relative to proto root
  repeated string files = 1;
}

message GetProtoFileRequest {
  // Path to the proto file (e.g., "juno/mint/v1/query.proto")
  string path = 1;
}

message GetProtoFileResponse {
  // Complete content of the proto file including all annotations
  string content = 1;
}

message GetDescriptorSetRequest {
  // Include imported proto files in the descriptor set
  bool include_imports = 1;
  
  // Include source code info (comments, locations)
  bool include_source_info = 2;
}

message GetDescriptorSetResponse {
  // Binary encoded FileDescriptorSet
  bytes descriptor_set = 1;
}

message GetServiceDescriptorsRequest {
  // Filter by service type: "Query", "Msg", or empty for all
  string service_type = 1;
  
  // Filter by package prefix
  string package_filter = 2;
}

message GetServiceDescriptorsResponse {
  repeated ServiceDescriptor services = 1;
}

message ServiceDescriptor {
  // Full service name (e.g., "juno.mint.v1.Query")
  string name = 1;
  
  // List of methods in the service
  repeated MethodDescriptor methods = 2;
  
  // Package this service belongs to
  string package = 3;
}

message MethodDescriptor {
  // Method name
  string name = 1;
  
  // Fully qualified input type
  string input_type = 2;
  
  // Fully qualified output type
  string output_type = 3;
  
  // Whether this method uses client streaming
  bool client_streaming = 4;
  
  // Whether this method uses server streaming
  bool server_streaming = 5;
}